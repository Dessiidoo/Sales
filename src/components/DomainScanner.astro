---
import { Search, Sparkles, DollarSign, TrendingUp } from 'lucide-react';
---

<section id="scanner" class="py-12">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <div class="flex items-center justify-center mb-4">
        <Sparkles className="w-8 h-8 text-primary-600 mr-3" />
        <h2 class="text-3xl font-bold text-gray-900">AI Domain Scanner</h2>
      </div>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Find undervalued domains with massive profit potential. Our AI analyzes market trends, 
        keyword value, and historical sales data to identify the best investment opportunities.
      </p>
    </div>

    <div class="max-w-4xl mx-auto">
      <div class="card mb-8">
        <div class="flex flex-col md:flex-row gap-4">
          <div class="flex-1">
            <label for="domain-search" class="block text-sm font-medium text-gray-700 mb-2">
              Search Keywords or Domain Names
            </label>
            <input 
              type="text" 
              id="domain-search"
              class="input"
              placeholder="e.g., crypto, ai, tech, blockchain..."
            />
          </div>
          <div class="md:w-48">
            <label for="max-price" class="block text-sm font-medium text-gray-700 mb-2">
              Max Price ($)
            </label>
            <input 
              type="number" 
              id="max-price"
              class="input"
              placeholder="100"
              value="50"
            />
          </div>
          <div class="flex items-end">
            <button id="scan-btn" class="btn-primary flex items-center space-x-2 h-12">
              <Search className="w-5 h-5" />
              <span>Scan Domains</span>
            </button>
          </div>
        </div>
      </div>

      <!-- Loading State -->
      <div id="loading" class="hidden text-center py-12">
        <div class="inline-flex items-center space-x-3">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
          <span class="text-lg text-gray-600">AI is analyzing domains...</span>
        </div>
      </div>

      <!-- Results -->
      <div id="results" class="space-y-6"></div>
    </div>
  </div>
</section>

<script lang="ts" type="module">
  import { domainAnalyzer } from '../utils/domainAnalyzer.js';
  
  const scanBtn = document.getElementById('scan-btn');
  const loading = document.getElementById('loading');
  const results = document.getElementById('results');
  const searchInput = document.getElementById('domain-search');
  const maxPriceInput = document.getElementById('max-price');

  scanBtn?.addEventListener('click', async () => {
    const keywords = searchInput.value.trim();
    const maxPrice = parseInt(maxPriceInput.value) || 100;
    
    if (!keywords) {
      alert('Please enter keywords to search for domains');
      return;
    }

    // Show loading
    loading?.classList.remove('hidden');
    results!.innerHTML = '';
    scanBtn!.disabled = true;
    scanBtn!.innerHTML = '<div class="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>Scanning...';

    try {
      const domains = await domainAnalyzer.scanDomains(keywords, maxPrice);
      displayResults(domains);
    } catch (error) {
      console.error('Error scanning domains:', error);
      results!.innerHTML = '<div class="text-center py-8 text-red-600">Error scanning domains. Please try again.</div>';
    } finally {
      loading?.classList.add('hidden');
      scanBtn!.disabled = false;
      scanBtn!.innerHTML = '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>Scan Domains';
    }
  });

  function displayResults(domains: any[]) {
    if (domains.length === 0) {
      results!.innerHTML = '<div class="text-center py-8 text-gray-600">No domains found matching your criteria.</div>';
      return;
    }

    const html = domains.map(domain => `
      <div class="card hover:shadow-lg transition-shadow duration-200">
        <div class="flex flex-col lg:flex-row lg:items-center justify-between">
          <div class="flex-1">
            <div class="flex items-center space-x-3 mb-3">
              <h3 class="text-xl font-semibold text-gray-900">${domain.name}</h3>
              <span class="badge ${getProfitBadgeClass(domain.profitScore)}">${getProfitLabel(domain.profitScore)}</span>
            </div>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
              <div>
                <p class="text-sm text-gray-500">Current Price</p>
                <p class="text-lg font-semibold text-gray-900">$${domain.currentPrice}</p>
              </div>
              <div>
                <p class="text-sm text-gray-500">Predicted Value</p>
                <p class="text-lg font-semibold text-success-600">$${domain.predictedValue.toLocaleString()}</p>
              </div>
              <div>
                <p class="text-sm text-gray-500">Potential Profit</p>
                <p class="text-lg font-semibold text-primary-600">$${(domain.predictedValue - domain.currentPrice).toLocaleString()}</p>
              </div>
              <div>
                <p class="text-sm text-gray-500">ROI</p>
                <p class="text-lg font-semibold text-purple-600">${domain.roi}%</p>
              </div>
            </div>

            <div class="flex flex-wrap gap-2 mb-4">
              ${domain.reasons.map((reason: string) => `<span class="badge bg-gray-100 text-gray-700">${reason}</span>`).join('')}
            </div>

            <div class="flex items-center space-x-4 text-sm text-gray-600">
              <span>üéØ Confidence: ${domain.confidence}%</span>
              <span>üìà Trend Score: ${domain.trendScore}/10</span>
              <span>üîç SEO Value: ${domain.seoValue}/10</span>
              ${domain.aiPowered ? '<span class="text-primary-600">ü§ñ AI Powered</span>' : '<span class="text-gray-500">üìä Simulated</span>'}
            </div>
            
            ${domain.riskFactors ? `
              <div class="mt-3 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                <p class="text-sm font-medium text-yellow-800 mb-1">‚ö†Ô∏è Risk Factors:</p>
                <p class="text-sm text-yellow-700">${domain.riskFactors.join(', ')}</p>
              </div>
            ` : ''}
            
            ${domain.timeToSell ? `
              <div class="mt-2 text-sm text-gray-600">
                ‚è±Ô∏è Estimated time to sell: <span class="font-medium">${domain.timeToSell}</span>
              </div>
            ` : ''}
          </div>

          <div class="mt-4 lg:mt-0 lg:ml-6">
            <button class="btn-primary w-full lg:w-auto">
              Buy Domain
            </button>
          </div>
        </div>
      </div>
    `).join('');

    results!.innerHTML = html;
  }

  function getProfitBadgeClass(score: number): string {
    if (score >= 8) return 'badge-success';
    if (score >= 6) return 'badge-warning';
    return 'badge-danger';
  }

  function getProfitLabel(score: number): string {
    if (score >= 8) return 'High Profit';
    if (score >= 6) return 'Medium Profit';
    return 'Low Profit';
  }
</script>